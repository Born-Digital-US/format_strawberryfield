<?php
/**
 * @file
 * Contains formater_strawberryfield.module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_page_attachments().
 *
 * Adds the quickedit library to the page for any user who has the 'access
 * in-place editing' permission.
 */
function format_strawberryfield_page_attachments(array &$page) {
    /*if (!\Drupal::currentUser()->hasPermission('access search')) {
        return;
    @TODO discuss if we need to limit viewers to a particular role?
    Could be nice to allow annotations as a drop replacement
    of the same viewer dependant on the rol
    }*/

    // Remove IIIF on admin routes, why make peoples life more complicated
    if (\Drupal::service('router.admin_context')->isAdminRoute()) {
        return;
    }
    $page['#attached']['library'][] = 'format_strawberryfield/iiif_openseadragon';
    $page['#attached']['library'][] = 'format_strawberryfield/iiif_openseadragon_strawberry';
}


/**
 * Implements hook_theme().
 */
function format_strawberryfield_theme() {
  return array(
    'remote_iiif_style' => array(
      'variables' => array(
        'style_name' => NULL,
        'path' => NULL,
        'width' => NULL,
        'height' => NULL,
        'alt' => '',
        'title' => NULL,
        'attributes' => array(),
      ),
    ),
  );
}

/**
 * Returns HTML for an image using a specific image style.
 *
 * Clones theme_image_style() with the additional step of forcing the creation
 * of the derivative to bypass any 404 issues.
 */
function theme_remote_iiif_style($variables) {
  // Determine the dimensions of the styled image.
  $dimensions = array(
    'width' => $variables['width'],
    'height' => $variables['height'],
  );
  image_style_transform_dimensions($variables['style_name'], $dimensions);

  $variables['width'] = $dimensions['width'];
  $variables['height'] = $dimensions['height'];

  $image_style_dest_path = image_style_path($variables['style_name'], $variables['path']);
  if (!file_exists($image_style_dest_path)) {
    $style = image_style_load($variables['style_name']);
    image_style_create_derivative($style, $variables['path'], $image_style_dest_path);
  }
  $variables['path'] = file_create_url($image_style_dest_path);
  return theme('image', $variables);
}